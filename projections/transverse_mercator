Based on equations from http://mathworld.wolfram.com/MercatorProjection.html

...SECTION TO-CALCULATIONS:
const float PI = 3.141592653589793238462643383279502884197169399;

// rotate 90 deg anti-clockwise, for standard view of this projection
float oldCoordsY = coords.y;
coords.y = coords.x;
coords.x = 1.0 - oldCoordsY;

// Do standard mercator

coords.y -= 0.5;
coords.y *= 2.0;
coords.y *= 180.0/PI*log(tan(PI/4.0+maxLongitude*(PI/180.0)/2.0));

float newY = 180.0/PI * (2.0 * atan(exp(coords.y*PI/180.0)) - PI/2.0);
newY /= 180.0;
newY += 0.5;

coords.y = newY;

// apply new central merdian
coords.x = coords.x + meridian / 360.0;
if (coords.x < 0.0)
{
	coords.x = 1.0 + coords.x;
}
else if (coords.x > 1.0)
{
	coords.x = coords.x - 1.0;
}

// transverse
return latLongToTexelCoord(transverse(texelCoordToLatLong(coords)));

...SECTION FROM-CALCULATIONS:
return coords;

...SECTION TO-FORM:
Pick central latitude (from -180 to 180): <input name="meridian" type="number" min="-180" max="180">
Pick maximum longitude (from 0 to 90): <input value="82" name="maxLongitude" type="number" min="0" max="90">

...SECTION FROM-FORM:
THIS SECTION IS NOT WORKIN YET!<br>
Pick central longitude (from -180 to 180): <input name="meridian" type="number" min="-180" max="180">
Pick maximum latitude (from 0 to 90): <input name="maxLongitude" type="number" min="0" max="90">
Pick central latitude (from -90 to 90): <input name="latitude0" type="number" min="-90" max="90">

...SECTION OUTPUT-WIDTH-CALCULATIONS:
var xMax = 180.0/Math.PI*Math.log(Math.tan(Math.PI/4.0+getUniformFromArray(uniforms, 'maxLongitude').value*(Math.PI/180.0)/2.0));
return meridian*2*xMax/180;
...SECTION OUTPUT-HEIGHT-CALCULATIONS:
return meridian*2;
...SECTION MERIDIAN-LENGTH-CALCULATIONS:
return width/2;