...SECTION TO-CALCULATIONS:
const float PI = 3.141592653589793238462643383279502884197169399;

coords.y -= 0.5;
coords.y *= 2.0;
coords.y *= 180.0/PI*log(tan(PI/4.0+maxLatitude*(PI/180.0)/2.0));

float newY = 180.0/PI * (2.0 * atan(exp(coords.y*PI/180.0)) - PI/2.0);
newY /= 180.0;
newY += 0.5;

// apply new central merdian
coords.x = coords.x + meridian / 360.0;
if (coords.x < 0.0)
{
	coords.x = 1.0 + coords.x;
}
else if (coords.x > 1.0)
{
	coords.x = coords.x - 1.0;
}

return vec2(coords.x, newY);

...SECTION FROM-CALCULATIONS:
const float PI = 3.141592653589793238462643383279502884197169399;

// apply new central merdian
coords.x = coords.x - meridian / 360.0;
if (coords.x < 0.0)
{
	coords.x = 1.0 + coords.x;
}
else if (coords.x > 1.0)
{
	coords.x = coords.x - 1.0;
}

float yMax = 180.0/PI*log(tan(PI/4.0+maxLatitude*(PI/180.0)/2.0));

coords.y -= 0.5;
coords.y *= PI;

float newY = 180.0/PI*log(tan(PI/4.0+coords.y/2.0));
newY /= yMax;
newY += 1.0;
newY /= 2.0;

if (newY > 1.0)
	// This point is beyond our mercator map (coords.y in deg > maxLatitude)
	return vec2(-1.0, -1.0);
	
return vec2(coords.x, newY);

...SECTION TO-FORM:
Pick central longitude (from -180 to 180): <input name="meridian" type="number" min="-180" max="180">
Pick maximum latitude (from 0 to 89.9): <input name="maxLatitude" type="number" min="0" step="0.1" max="89.9" value="82">

...SECTION FROM-FORM:
Pick central longitude (from -180 to 180): <input name="meridian" type="number" min="-180" max="180">
Pick maximum latitude (from 0 to 89.9): <input name="maxLatitude" type="number" min="0" step="0.1" max="89.9" value="82">

...SECTION OUTPUT-WIDTH-CALCULATIONS:
return meridian*2;
...SECTION OUTPUT-HEIGHT-CALCULATIONS:
var yMax = 180.0/Math.PI*Math.log(Math.tan(Math.PI/4.0+getUniformFromArray(uniforms, 'maxLatitude').value*(Math.PI/180.0)/2.0));
return meridian*2*yMax/180;
...SECTION MERIDIAN-LENGTH-CALCULATIONS:
return width/2;